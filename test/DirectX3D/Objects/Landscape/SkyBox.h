#pragma once

class SkyBox : public Sphere
{
    // 스카이박스 : 3D 공간이 있는 프로그램에서 하늘을 빠르게 묘사하기 위해서 배치한 원시모형
    //             원래는 이름처럼 육면체를 썼지만 요즘은 육면체와 구체를 경우에 따라 나누어 쓴다
    // 스카이박스의 특징 : 텍스처가 안을 향한다 (안에서 봐야 보이고 밖으로 가면 안 보인다)
    //                   육면체의 경우 각 면의 텍스처를 각각 따로 준비하는 경우가 많다
    //                   = 보통 6개의 면을 가진 아틀라스
    //                   (*아틀라스 : 세계지도, 혹은 여러 이미지를 한 장에 붙인 큰 그림 모음)
    //                   구체의 경우는 그냥 텍스처 1장으로 충분

public:
    //텍스처 1장짜리 스카이박스
    SkyBox(wstring file);
    ~SkyBox();

    void Render();
    void GUIRender() { Sphere::GUIRender(); }

private:
    Texture* skyMap; // 하늘용 텍스처

    // DX 제공 (기능을 좀 더 편하게 정리한) 클래스 호출

    RasterizerState* rasterizerState[2]; // 래스터라이저 : 정점과 벡터 위주로 만들어진 이미지가 있을 때
                                         // (정점으로 만든 구체 + 벡터UV로 붙인 텍스처) 픽셀로 바꿔주는 기능

    DepthStencilState* depthStencilState[2]; // 깊이+스텐실 상태 : 픽셀 혹은 셰이더 연산이 된 픽셀의
                                             // 출력 우선순위를 설정하는 뎁스 상태와,
                                             // 화소의 출력 가능 여부를 수동으로 설정하는 스텐실 상태를
                                             // 하나의 기능으로 통합한 것 (추후 정식 설명)
};

